#############################################################################
# See https://github.com/rakshasa/rtorrent/wiki/CONFIG-Template
# for an up-to-date version.
#############################################################################

## ruTorrent init plugins when rtorrent starts
execute = {sh,-c,/usr/bin/php7 /usr/share/webapps/rutorrent/php/initplugins.php abc &}

## Delete and recreate rtorrent (unix) socket file
execute.nothrow = rm,/run/php/.rtorrent.sock
network.scgi.open_local = /run/php/.rtorrent.sock
schedule = socket_chmod,0,0,"execute=chmod,0660,/run/php/.rtorrent.sock"
schedule = socket_chgrp,0,0,"execute=chgrp,abc,/run/php/.rtorrent.sock"

## SCGI-Port for webGUI-Connection
# scgi_port = 127.0.0.1:5000

## Instance layout (base paths)
method.insert = cfg.basedir,  private|const|string, (cat,"/config/rtorrent/")
method.insert = cfg.download, private|const|string, (cat,"/downloads/")
method.insert = cfg.logs,     private|const|string, (cat,(cfg.basedir),"log/")
method.insert = cfg.logfile,  private|const|string, (cat,(cfg.logs),"rtorrent-",(system.time),".log")
method.insert = cfg.session,  private|const|string, (cat,(cfg.basedir),"rtorrent_sess/")
method.insert = cfg.watch,    private|const|string, (cat,(cfg.basedir),"watch/")

## Basic operational settings (no need to change these)
session.path.set = (cat, (cfg.session))
directory.default.set = (cat, (cfg.download))

## Listening port for incoming peer traffic (fixed; you can also randomize it)
network.port_range.set = 51413-51413
network.port_random.set = yes

## https://github.com/rakshasa/rtorrent/wiki/Common-Tasks-in-rTorrent#id19
#bind = 0.0.0.0

## https://github.com/rakshasa/rtorrent/wiki/Common-Tasks-in-rTorrent#id20
# ip = 178.32.28.51

## SSL certificate stuff
network.http.capath.set = "/etc/ssl/certs"
#network.http.ssl_verify_peer.set = 0
#network.http.ssl_verify_host.set = 0

## Tracker-less torrent and UDP tracker support
## (conservative settings for 'private' trackers, change for 'public')
dht.mode.set = disable
protocol.pex.set = no
trackers.use_udp.set = no
protocol.encryption.set = allow_incoming,try_outgoing,enable_retry

## Other operational settings (check & adapt)
# System encoding
encoding.add = utf8
# Set current working directory
system.cwd.set = (directory.default)
# Rehash data on completion
pieces.hash.on_completion.set = yes

#system.umask.set = 0022
#view.sort_current = seeding, greater=d.ratio=
#keys.layout.set = qwerty

## Low diskspace prevention
# schedule = watch_directory_1,5,5,"load.start=/downloads/watched/*.torrent"
schedule = monitor_diskspace, 15, 60, ((close_low_diskspace, 100M))


########################### PERFORMANCE OPTIMZING #########################################

# Global upload and download rate in KiB, `0` for unlimited (`download_rate`, `upload_rate`)
throttle.global_down.max_rate.set_kb = 0
throttle.global_up.max_rate.set_kb   = 0

## Peer settings

# Maximum number of simultaneous downloads and uploads slots (global slots!) (`max_downloads_global`, `max_uploads_global`)
throttle.max_downloads.global.set = 1024
throttle.max_uploads.global.set   = 1024

# Maximum and minimum number of peers to connect to per torrent while downloading (`min_peers`, `max_peers`) Default: `100` and `200` respectively
throttle.min_peers.normal.set = 40
throttle.max_peers.normal.set = 1200

# Same as above but for seeding completed torrents (seeds per torrent), `-1` for same as downloading (`min_peers_seed`, `max_peers_seed`) Default:$
throttle.min_peers.seed.set = -1
throttle.max_peers.seed.set = -1

# Maximum number of simultaneous downloads and uploads slots per torrent (`max_uploads`) Default: `50` for both
throttle.max_downloads.set = 50
throttle.max_uploads.set = 50

# Set the numwant field sent to the tracker, which indicates how many peers we want.
#  A negative value disables this feature. Default: `-1` (`tracker_numwant`)
trackers.numwant.set = 100

###### FILE HANDLING #######

## Limits for file handle resources, this is optimized for
## an `ulimit` of 1024 (a common default). You MUST leave
## a ceiling of handles reserved for rTorrent's internal needs!
## Memory resource usage (increase if you have a large number of items loaded,
## and/or the available resources to spend)

# Set the max amount of memory address space used to mapping file chunks. This refers to memory mapping, not
#  physical memory allocation. Default: `1GB` (`max_memory_usage`)
# This may also be set using ulimit -m where 3/4 will be allocated to file chunks.
pieces.memory.max.set = 4096M

# Whether to allocate disk space for a new torrent. Default: `0`
system.file.allocate.set = 1

###### NETWORK #######

# Maximum number of simultaneous HTTP request (used by announce or scrape requests) Default: `32` (`set_max_open_http`)
network.http.max_open.set = 32
# Maximum number of open files rtorrent can keep open (you have to modify the system wide settings with ulimit!) (`set_max_open_files`)
network.max_open_files.set = 400
# Maximum number of connections rtorrent can accept/make (`sockets`)
network.max_open_sockets.set = 999

# Send and receive buffer size for socket. Disabled by default (`0`), this means the default is used by OS
#  (you have to modify the system wide settings!) (`send_buffer_size`, `receive_buffer_size`)
# Increasing buffer sizes may help reduce disk seeking, connection polling as more data is buffered each time
#  the socket is written to. It will result higher memory usage (not visible in rtorrent process!).
network.receive_buffer.size.set =  4M
network.send_buffer.size.set    = 12M

# Max packet size using xmlrpc. Default: `524288` (xmlrpc_size_limit)
network.xmlrpc.size_limit.set = 4M

# CURL option to lower DNS timeout. Default: `60`.
network.http.dns_cache_timeout.set = 25

###### VARIA ########

# Save all the sessions in every 6 hours instead of the default 20 minutes.
schedule2 = session_save, 1200, 21600, ((session.save))

########################### PERFORMANCE OPTIMZING #########################################


## Watch directories (add more as you like, but use unique schedule names)
## Add torrent
##    schedule2 = watch_load, 11, 10, ((load.verbose, (cat, (cfg.watch), "*.torrent")))
## Add & download straight away
##    schedule3 = watch_start, 10, 10, ((load.start_verbose, (cat, (cfg.watch), "*.torrent")))


## Logging:
##   https://github.com/rakshasa/rtorrent/wiki/LOG-Logging
##   Levels = critical error warn notice info debug
##   Groups = connection_* dht_* peer_* rpc_* storage_* thread_* tracker_* torrent_*
print = (cat, "Logging to ", (cfg.logfile))
log.open_file = "rtorrent", (cfg.logfile)
log.add_output = "info", "rtorrent"
